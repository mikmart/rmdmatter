[{"path":"https://mikmart.github.io/rmdmatter/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rmdmatter authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mikmart.github.io/rmdmatter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikko Marttila. Author, maintainer.","code":""},{"path":"https://mikmart.github.io/rmdmatter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marttila M (2022). rmdmatter: Make R Markdown YAML Front Matter. https://github.com/mikmart/rmdmatter, https://mikmart.github.io/rmdmatter/.","code":"@Manual{,   title = {rmdmatter: Make the Most of R Markdown YAML Front Matter},   author = {Mikko Marttila},   year = {2022},   note = {https://github.com/mikmart/rmdmatter, https://mikmart.github.io/rmdmatter/}, }"},{"path":"https://mikmart.github.io/rmdmatter/index.html","id":"rmdmatter","dir":"","previous_headings":"","what":"Make the Most of R Markdown YAML Front Matter","title":"Make the Most of R Markdown YAML Front Matter","text":"goal rmdmatter help make YAML front matter R Markdown document.","code":""},{"path":"https://mikmart.github.io/rmdmatter/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make the Most of R Markdown YAML Front Matter","text":"can install development version rmdmatter GitHub :","code":"remotes::install_github(\"mikmart/rmdmatter\")"},{"path":"https://mikmart.github.io/rmdmatter/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make the Most of R Markdown YAML Front Matter","text":"Use YAML front matter rename output file rendered rmdmatter::render(): use rmdmatter::renderer knit field integrate RStudio Knit button:","code":"library(rmdmatter)  output_file <- render(input_file) rename_rendered(output_file, function(metadata) {   with(metadata, paste(title, \"by\", author, \"on\", date)) }) --- title: \"Untitled\" author: \"Jane Doe\" date: \"`r Sys.Date()`\" output: html_document knit: |   rmdmatter::renaming_renderer(function(metadata) {     with(metadata, paste(title, \"by\", author, \"on\", date))   }) ---  204 No Content"},{"path":"https://mikmart.github.io/rmdmatter/reference/rename_rendered.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a rendered file with YAML front matter metadata — rename_rendered","title":"Rename a rendered file with YAML front matter metadata — rename_rendered","text":"Rename rendered file YAML front matter metadata","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/rename_rendered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a rendered file with YAML front matter metadata — rename_rendered","text":"","code":"rename_rendered(file, callback)"},{"path":"https://mikmart.github.io/rmdmatter/reference/rename_rendered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a rendered file with YAML front matter metadata — rename_rendered","text":"file string gives path file rename. result render() order metadata attached. callback function gets rendered R Markdown YAML front matter metadata argument, returns new name file. changes implied directory file extension ignored -- name changed.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/rename_rendered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a rendered file with YAML front matter metadata — rename_rendered","text":"string gives path renamed file.","code":""},{"path":[]},{"path":"https://mikmart.github.io/rmdmatter/reference/rename_rendered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a rendered file with YAML front matter metadata — rename_rendered","text":"","code":"if (FALSE) { # Make sure to use rmdmatter's render() to have metadata available output_file <- rmdmatter::render(input_file) rename_rendered(output_file, function(metadata) {   with(metadata, paste(title, \"by\", author, \"on\", date)) }) }"},{"path":"https://mikmart.github.io/rmdmatter/reference/render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render R Markdown and retain the front matter — render","title":"Render R Markdown and retain the front matter — render","text":"Render R Markdown file retain rendered YAML front matter metadata.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render R Markdown and retain the front matter — render","text":"","code":"render(...)"},{"path":"https://mikmart.github.io/rmdmatter/reference/render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render R Markdown and retain the front matter — render","text":"... Arguments passed rmarkdown::render input input file rendered. can R script (.R), R Markdown document (.Rmd), plain markdown document. output_format R Markdown output format convert . option \"\" render formats defined within file. option can name format (e.g. \"html_document\") render document single format. One can also use vector format names render multiple formats. Alternatively, can pass output format object (e.g. html_document()). using NULL output format first one defined YAML frontmatter input file (defaults HTML format specified ). pass output format object output_format, options specified YAML header _output.yml ignored must explicitly set options want construct object. pass string, output format use output parameters YAML header _output.yml. output_file name output file. using NULL output filename based filename input file. filename provided, path output file can also provided. Note output_dir option allows specifying output file path well, however, also specifying path, directory must exist. output_file specified file extension, extension automatically added according output format. avoid automatic file extension, put output_file value (), e.g., ('-output'). output_dir output directory rendered output_file. allows choice alternate directory output file written (default output directory input file). path provided filename output_file directory specified take precedence. Please note directory path provided create necessary directories exist. output_options List output options can override options specified metadata (e.g. used force self_contained mathjax = \"local\"). Note valid output format read metadata (.e. custom format object passed output_format). output_yaml Paths YAML files specifying output formats configurations. first existing one used. none found, function searches YAML files specified output_yaml top-level parameter YAML front matter, _output.yml _output.yaml, uses first existing one. intermediates_dir Intermediate files directory. path specified intermediate files written path. NULL, intermediate files written directory input file. knit_root_dir working directory knit document; uses knitr's root.dir knit option. NULL behavior follow knitr default, use parent directory document. runtime runtime target rendering. static option produces output intended static files; shiny produces output suitable use Shiny document (see run). default, auto, allows runtime target specified YAML metadata take precedence, renders static runtime target otherwise. clean Using TRUE clean intermediate files created rendering. params list named parameters override custom params specified within YAML front-matter (e.g. specifying dataset read date range confine output ). Pass \"ask\" start application helps guide parameter configuration. knit_meta (option reserved expert use.) Metadata generated knitr. envir environment code chunks evaluated knitting (can use new.env() guarantee empty new environment). run_pandoc option whether run pandoc convert Markdown output. quiet option suppress printing rendering knitr, pandoc command line others. suppress printing last \"Output created: \" message, can set rmarkdown.render.message FALSE encoding Ignored. encoding always assumed UTF-8.","code":""},{"path":[]},{"path":"https://mikmart.github.io/rmdmatter/reference/render_and_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Render R Markdown to a file based on rendered metadata — render_and_rename","title":"Render R Markdown to a file based on rendered metadata — render_and_rename","text":"Render R Markdown file, use rendered YAML front matter construct dynamic output file name. thin wrapper render() followed rename_rendered(), also prints helpful message interactive use.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/render_and_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render R Markdown to a file based on rendered metadata — render_and_rename","text":"","code":"render_and_rename(input, callback, ..., quiet = FALSE)"},{"path":"https://mikmart.github.io/rmdmatter/reference/render_and_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render R Markdown to a file based on rendered metadata — render_and_rename","text":"input input file rendered. can R script (.R), R Markdown document (.Rmd), plain markdown document. callback function gets rendered R Markdown YAML front matter metadata argument, returns new name file. changes implied directory file extension ignored -- name changed. ... Arguments passed render   quiet option suppress printing rendering knitr, pandoc command line others. suppress printing last \"Output created: \" message, can set rmarkdown.render.message FALSE","code":""},{"path":[]},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function to render R Markdown with pre-filled options — renderer","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"returned function compatible knit YAML front matter field R Markdown documents, lets customize Knit button RStudio.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"","code":"rmarkdown_renderer(...)  rmdmatter_renderer(...)  renaming_renderer(callback, ...)"},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"... Arguments passed underlying rendering function returned function called. callback function gets rendered R Markdown YAML front matter metadata argument, returns new name file. changes implied directory file extension ignored -- name changed.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"function takes two arguments, input encoding, renders input R Markdown document called.","code":""},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"Renderer functions particularly useful conjunction knit metadata field specify custom rendering options RStudio. example, extending example header rmarkdown::rmd_metadata, can easily specify fixed output file rmarkdown_renderer(): use renaming_renderer() name output dynamically using fields front matter:","code":"--- title: \"Crop Analysis Q3 2013\" author: Martha Smith date: October 23rd, 2013 knit: rmdmatter::rmarkdown_renderer(output_file = \"analysis-q3\") --- --- title: \"Crop Analysis Q3 2013\" author: Martha Smith date: October 23rd, 2013 knit: |   rmdmatter::renaming_renderer(function(metadata) metadata$title) ---"},{"path":"https://mikmart.github.io/rmdmatter/reference/renderer.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a function to render R Markdown with pre-filled options — renderer","text":"rmarkdown_renderer: Vanilla R Markdown rendering. rmdmatter_renderer: Retains rendered YAML front matter. renaming_renderer: Retains rendered YAML front matter, passes callback rename output file.","code":""},{"path":[]}]
